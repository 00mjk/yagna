/* 
 * Golem Market API
 *
 * Market API
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 */


use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct RequestorEvent {
  #[serde(rename = "eventType")]
  event_type: String,
  #[serde(rename = "providerId")]
  provider_id: String
}

impl RequestorEvent {
  pub fn new(event_type: String, provider_id: String) -> RequestorEvent {
    RequestorEvent {
      event_type: event_type,
      provider_id: provider_id
    }
  }

  pub fn set_event_type(&mut self, event_type: String) {
    self.event_type = event_type;
  }

  pub fn with_event_type(mut self, event_type: String) -> RequestorEvent {
    self.event_type = event_type;
    self
  }

  pub fn event_type(&self) -> &String {
    &self.event_type
  }


  pub fn set_provider_id(&mut self, provider_id: String) {
    self.provider_id = provider_id;
  }

  pub fn with_provider_id(mut self, provider_id: String) -> RequestorEvent {
    self.provider_id = provider_id;
    self
  }

  pub fn provider_id(&self) -> &String {
    &self.provider_id
  }


}



