/*
 * Market API
 *
 * OpenAPI spec version: 1.0.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Debug, Serialize, Deserialize)]
pub struct Agreement {
    #[serde(rename = "proposalId")]
    proposal_id: String,
    #[serde(rename = "expirationDate")]
    expiration_date: String,
}

impl Agreement {
    pub fn new(proposal_id: String, expiration_date: String) -> Agreement {
        Agreement {
            proposal_id: proposal_id,
            expiration_date: expiration_date,
        }
    }

    pub fn set_proposal_id(&mut self, proposal_id: String) {
        self.proposal_id = proposal_id;
    }

    pub fn with_proposal_id(mut self, proposal_id: String) -> Agreement {
        self.proposal_id = proposal_id;
        self
    }

    pub fn proposal_id(&self) -> &String {
        &self.proposal_id
    }

    pub fn set_expiration_date(&mut self, expiration_date: String) {
        self.expiration_date = expiration_date;
    }

    pub fn with_expiration_date(mut self, expiration_date: String) -> Agreement {
        self.expiration_date = expiration_date;
        self
    }

    pub fn expiration_date(&self) -> &String {
        &self.expiration_date
    }
}
