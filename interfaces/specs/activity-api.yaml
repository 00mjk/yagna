swagger: '2.0'

info:
  version: v1
  title: Yagna Activity API
  description:
    It conforms with capability level 1 of the
    <a href="https://docs.google.com/document/d/1BXaN32ediXdBHljEApmznSfbuudTU8TmvOmHKl0gmQM">
      Activity API specification
    </a>.

basePath: /activity-api/v1

tags:
  - name: requestor_control
    description: Requestor Part (Control)
  - name: requestor_state
    description: Requestor Part (State)
  - name: provider
    description: Provider Part

schemes:
  - https
  - http

paths:

  /activity:
    post:
      tags:
        - requestor_control
      summary: Creates new Activity based on given Agreement.
      description: '**Note:** This call shall get routed as a provider event (see ProviderEvent structure).' 
      operationId: CreateActivity
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: agreementId
          in: body
          description: ''
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Success
          schema:
            type: string
            example: '"activityId"'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/CreateActivityError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/CreateActivityError'

  '/activity/{activityId}/exec':
    post:
      tags:
        - requestor_control
      summary: Executes an ExeScript batch within a given Activity.
      description: '**Note:** This call shall get routed directly to ExeUnit. '      operationId: Exec
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: script
          in: body
          description: ''
          required: true
          schema:
            $ref: '#/definitions/ExeScriptRequest'
      responses:
        '200':
          description: Success
          schema:
            type: string
            example: '"batchId"'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ExecError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ExecError'

  '/activity/{activityId}/exec/{batchId}':
    get:
      tags:
        - requestor_control
      summary: Queries for ExeScript batch results.
      description: '**Note:** This call shall collect ExeScriptCommand result objects received directly from ExeUnit.' 
      operationId: GetExecBatchResults
      consumes: []
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: batchId
          in: path
          description: ''
          required: true
          type: string
        - name: timeout
          in: query
          description: ''
          required: false
          type: integer
          format: int32
        - name: maxCount
          in: query
          description: ''
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ExeScriptCommandResult'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ExecError'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
  '/activity/{activityId}':
    delete:
      tags:
        - requestor_control
      summary: Destroys given Activity.
      description: '**Note:** This call shall get routed as a provider event (see ProviderEvent structure).' 
      operationId: DestroyActivity
      consumes: []
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/DestroyActivityError'

  /activity/events:
    get:
      tags:
        - provider
      summary: Fetch Requestor command events.
      operationId: CollectActivityEvents
      consumes: []
      produces:
        - application/json
      parameters:
        - name: timeout
          in: query
          description: ''
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            uniqueItems: false
            type: array
            items:
              $ref: '#/definitions/ProviderEvent'
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'

  '/activity/{activityId}/state':
    get:
      tags:
        - requestor_state
      summary: Get state of specified Activity.
      operationId: GetState
      consumes: []
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivityState'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
    put:
      tags:
        - provider
      summary: Pass activity state (which may include error details)
      operationId: PutActivityStateDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: state
          in: body
          required: false
          schema:
            $ref: '#/definitions/ActivityState'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'


  '/activity/{activityId}/usage':
    get:
      tags:
        - requestor_state
      summary: Get usage of specified Activity.
      operationId: GetCurrentUsage
      consumes: []
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            description: Returns the current vector of usage counters consumed by the Activity. The sequence of values corresponds to Usage Vector property (golem.usage.vector) as indicated in the Agreement (Offer part).
            uniqueItems: false
            type: array
            items:
              format: double
              type: number
            example: '[123.5, 34000]'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'
    put:
      tags:
        - provider
      summary: Pass current activity usage (which may include error details)
      operationId: PutActivityUsageDetails
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: string
        - name: state
          in: body
          required: false
          schema:
            $ref: '#/definitions/ActivityUsage'
      responses:
        '200':
          description: Success
        '403':
          description: Forbidden
          schema:
            $ref: '#/definitions/ProblemDetails'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ProblemDetails'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'


  '/activity/{activityId}/command':
    get:
      tags:
        - requestor_state
      summary: Get running command for a specified Activity.
      description: '**Note:** This call shall get routed directly to ExeUnit.' 
      operationId: GetRunningCommand
      consumes: []
      produces:
        - application/json
      parameters:
        - name: activityId
          in: path
          description: ''
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ExeScriptCommandState'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorBase'
        '500':
          description: Server Error
          schema:
            $ref: '#/definitions/ErrorBase'

definitions:

  CreateActivityError:
    type: object
    properties:
      message:
        type: string

  ProblemDetails:
    type: object
    properties:
      type:
        type: string
      title:
        type: string
      status:
        format: int32
        type: integer
      detail:
        type: string
      instance:
        type: string
    additionalProperties:
      type: object

  ExeScriptRequest:
    type: object
    properties:
      text:
        type: string

  ExecError:
    type: object
    properties:
      message:
        type: string

  ExeScriptCommandResult:
    type: object
    properties:
      index:
        format: int32
        type: integer
      result:
        enum:
          - Ok
          - Error
        type: string
      message:
        type: string

  ErrorBase:
    type: object
    properties:
      message:
        type: string

  DestroyActivityError:
    type: object
    properties:
      message:
        type: string

  ProviderEvent:
    required:
      - eventType
    type: object
    properties:
      eventType:
        enum:
          - CreateActivity
          - DestroyActivity
          - GetState
          - GetUsage
        type: string
      activityId:
        type: string
    discriminator: eventType

  ActivityUsage:
    type: object
    properties:
      currentUsage:
        description: Current usage vector
        uniqueItems: false
        type: array
        items:
          format: double
          type: number

  ActivityState:
    type: object
    properties:
      state:
        enum:
          - New
          - Deploying
          - Ready
          - Starting
          - Active
          - Unresponsive
          - Terminated
        type: string
      reason:
        description: Reason for Activity termination (specified when Activity in Terminated state).
        type: string
      errorMessage:
        description: If error caused state change - error message shall be provided.
        type: string

  ExeScriptCommand:
    type: object
    properties:
      command:
        # TODO: consider enum here
        type: string
      params:
        uniqueItems: false
        type: array
        items:
          type: string

  ExeScriptCommandState:
    type: object
    properties:
      command:
        # TODO: consider enum here
        type: string
      progress:
        type: string
      params:
        uniqueItems: false
        type: array
        items:
          type: string

  CreateActivityProviderEvent:
    type: object
    allOf:
      - $ref: '#/definitions/ProviderEvent'
      - type: object
        properties:
          agreementId:
            type: string
    properties: {}

  ExecProviderEvent:
    type: object
    allOf:
      - $ref: '#/definitions/ProviderEvent'
      - type: object
        properties:
          batchId:
            type: string
          exeScript:
            $ref: '#/definitions/ExeScriptBatch'
    properties: {}

  ExeScriptBatch:
    type: object
    properties:
      commands:
        uniqueItems: false
        type: array
        items:
          $ref: '#/definitions/ExeScriptCommand'
